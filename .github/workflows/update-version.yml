name: Update Version on Release

on:
  release:
    types: [published]

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Extract version from tag
        id: version
        run: |
          # Remove 'v' prefix if present (e.g., v1.3.2 -> 1.3.2)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
      
      - name: Update TOC version
        run: |
          sed -i "s/^## Version: .*/## Version: ${{ steps.version.outputs.version }}/" CCRotationHelper.toc
          echo "Updated CCRotationHelper.toc version to ${{ steps.version.outputs.version }}"
      
      - name: Verify changes
        run: |
          echo "=== Current TOC version line ==="
          grep "^## Version:" CCRotationHelper.toc
          echo "=== Git diff ==="
          git diff CCRotationHelper.toc
      
      - name: Create Pull Request for version update
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update version to ${{ steps.version.outputs.version }} [skip ci]"
          title: "ðŸ”– Update version to ${{ steps.version.outputs.version }}"
          body: |
            Automatically updating addon version to match release tag `${{ github.event.release.tag_name }}`.
            
            **Changes:**
            - Updates `## Version:` line in `CCRotationHelper.toc` to `${{ steps.version.outputs.version }}`
            
            This PR was generated automatically after release publication and will be auto-merged.
          branch: "version-update-${{ steps.version.outputs.version }}"
          delete-branch: true
          
      - name: Auto-merge Pull Request
        if: steps.create-pr.outputs.pull-request-number != ''
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --squash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}